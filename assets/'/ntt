#define Poly vector<ll>
int set2(int n){ return 1<<((int)log2(n-1)+1); }
const ll g0 = 3;
const ll invg0 = inv(g0);
int init_rev_n,rev[N];
void init_rev(int n){
	if( init_rev_n==n ) return ;
	init_rev_n = n; int t = log2(n);
	rep(i,1,n-1) rev[i] = (rev[i>>1]>>1)|((i&1)<<(t-1));
}
void NTT(Poly&A,int IDFT){
	int n = A.size(); init_rev(n);
	rep(i,1,n-1) if( i<rev[i] ) swap(A[i],A[rev[i]]);
	for(int t=1; t<n ; t<<=1){
		ll w0 = qpow(IDFT==-1?invg0:g0,(mod-1)/(t*2));
		for(int l=0; l<n ; l+=t*2){
			for(register int i=0, w=1; i<t ; i++,w=w*w0%mod){
				ll x = A[l+i], y = w*A[l+t+i];
				A[l+i] = (x+y)%mod;
				A[l+t+i] = (x-y)%mod;
			}
		}
	}
	if( IDFT==-1 ){
		ll invn = inv(n);
		rep(i,0,n-1) A[i] = A[i]*invn%mod;
	}
}
