const int cL='a', cR='z';
struct node{
	node*fa;
	int len;
	struct nxt{
		node*a[cR-cL+1];
		node*&operator[](int x){
			return a[x-cL];
		}
	}c;
}d[N];
int tot_d = 1;
node* last = d;
int str[N],now_pos;
void init_PAM(){
	d[0]=(node){d+1,0};
	d[1]=(node){d,-1};
}
node* extend(int x){
	str[++now_pos] = x;
	node*p = last;
	for(;str[now_pos-p->len-1] != x;p=p->fa) ;
	if( p->c[x]==0 ){
		node*e = &d[++tot_d];
		node*q = p->fa;
		for(;str[now_pos-q->len-1] != x;q=q->fa) ;
		*e = (node){ q->c[x]==0 ? d:q->c[x] ,p->len+2};
		p->c[x] = e;
	}
	last = p->c[x];
	return last;
}
