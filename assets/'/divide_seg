#define lc(x) ((x)<<1)
#define rc(x) ((x)<<1|1)
struct sth{ int x,y; };
vector<sth> vec[N*4];
int tag[N*4],ans[N];
void ins(int x,int l,int r,int ql,int qr,const sth&e){
	if( ql<=l && r<=qr ) return vec[x].push_back(e), void();
	int mid = (l+r)/2;
	( ql<=mid ? ins(lc(x), l,mid ,ql,qr,e) : void());
	( mid< qr ? ins(rc(x),mid+1,r,ql,qr,e) : void());
}
void solve(int x,int l,int r){
	tag[x] = tag[x>>1];
	vector<sth> memory;
	if( tag[x]==0 ){
		for(auto e:vec[x]){
			if( lct.find_root(e.x)==lct.find_root(e.y) ){
				if( lct.split(e.x,e.y)->size % 2 == 1 ){
					tag[x] = 1;
					break;
				}
			}else lct.link(e.x,e.y), memory.push_back(e);
		}
	}
	if( l!=r ){
		int mid= (l+r)/2;
		solve(lc(x),l,mid);
		solve(rc(x),mid+1,r);
	}
	else ans[l]= tag[x];
	for(auto e:memory){
		lct.cut(e.x,e.y);
	}
}
