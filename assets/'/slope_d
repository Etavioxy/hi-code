int dp(int j,int i){
	return f[j]+c[j+1][i];
}
struct sth{ int l,r,p; };
int fd(const sth &e,int q){
	int l=e.l-1, r=e.r, p=e.p;
	while( l<r ){
		int mid = (l+r+1)/2;
		if( dp(p,mid) <= dp(q,mid) ) r=mid-1;
		else l=mid;
	}
	return l;
}
void solve(int n){
	static sth stk[N];
	int hd=1, tl=0;
	stk[++tl] = (sth){1,n,0};
	rep(i,1,n){
		f[i] = dp(stk[hd].p,i);
		if( hd<=tl && stk[hd].r==i ) hd++;
		stk[hd].l = i+1;
		while( hd<=tl && fd(stk[tl],i)==stk[tl].l-1 ) tl--;
		int x = fd(stk[tl],i);
		stk[tl].r = x;
		stk[++tl] = (sth){x+1,n,i};
	}
}
